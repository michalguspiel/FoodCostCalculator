<?xml version="1.0" ?>
<SmellBaseline>
  <ManuallySuppressedIssues></ManuallySuppressedIssues>
  <CurrentIssues>
    <ID>ClassNaming:Migration_1to2_RefactorDatabase.kt$Migration_1to2_RefactorDatabase : Migration</ID>
    <ID>ClassNaming:Migration_2to3_Remove_Ref_Tables_Where_Ref_Does_Not_Exist.kt$Migration_2to3_Remove_Ref_Tables_Where_Ref_Does_Not_Exist : Migration</ID>
    <ID>ClassNaming:Migration_3to_4_CreateRecipeTable.kt$Migration_3to_4_CreateRecipeTable : Migration</ID>
    <ID>ComposableParamOrder:AddItemFields.kt$AddItemFields</ID>
    <ID>ComposableParamOrder:ButtonRow.kt$ButtonRow</ID>
    <ID>ComposableParamOrder:DetailItem.kt$DetailItem</ID>
    <ID>ComposableParamOrder:DishesScreen.kt$DishItem</ID>
    <ID>ComposableParamOrder:FCCDialog.kt$FCCDialog</ID>
    <ID>ComposableParamOrder:HalfProductsScreen.kt$CreateHalfProductDialog</ID>
    <ID>ComposableParamOrder:HalfProductsScreen.kt$HalfProductItem</ID>
    <ID>ComposableParamOrder:NavigationListItem.kt$NavigationListItem</ID>
    <ID>ComposableParamOrder:RecipeScreen.kt$RecipeEdit</ID>
    <ID>ComposableParamOrder:RecipeScreen.kt$RecipeScreenContent</ID>
    <ID>ComposableParamOrder:RecipeScreen.kt$RecipeView</ID>
    <ID>ComposableParamOrder:SettingsScreen.kt$AccountServicesSection</ID>
    <ID>ComposableParamOrder:SubscriptionScreen.kt$ButtonRow</ID>
    <ID>ComposableParamOrder:ValueEditDialog.kt$ValueEditDialog</ID>
    <ID>CyclomaticComplexMethod:DataBackupScreen.kt$@OptIn(ExperimentalMaterial3Api::class) @Screen @Composable fun DataBackupScreen(navController: NavController, viewModel: OnlineBackupViewModel = viewModel())</ID>
    <ID>LongMethod:DataBackupScreen.kt$@OptIn(ExperimentalMaterial3Api::class) @Screen @Composable fun DataBackupScreen(navController: NavController, viewModel: OnlineBackupViewModel = viewModel())</ID>
    <ID>ParameterNaming:DishesScreen.kt$onChangeServingsClicked</ID>
    <ID>ParameterNaming:SubscriptionScreen.kt$onPlanSelected</ID>
    <ID>ReturnCount:EditHalfProductViewModel.kt$EditHalfProductViewModel$fun updateProductQuantity()</ID>
    <ID>SpreadOperator:AppRoomDataBase.kt$AppRoomDataBase.Companion$(*migrations())</ID>
    <ID>ThrowingExceptionsWithoutMessageOrCause:AdHelper.kt$AdHelper$NullPointerException()</ID>
    <ID>UnusedPrivateMember:OnlineBackupError.kt$DownloadFailure$private fun readResolve(): Any</ID>
    <ID>UnusedPrivateMember:OnlineBackupError.kt$DrivePermissionFailure$private fun readResolve(): Any</ID>
    <ID>UnusedPrivateMember:OnlineBackupError.kt$DriveQueryFailure$private fun readResolve(): Any</ID>
    <ID>UnusedPrivateMember:OnlineBackupError.kt$DriveSetupFailure$private fun readResolve(): Any</ID>
    <ID>UnusedPrivateMember:OnlineBackupError.kt$FailedToSignOut$private fun readResolve(): Any</ID>
    <ID>UnusedPrivateMember:OnlineBackupError.kt$NoDatabaseFileError$private fun readResolve(): Any</ID>
    <ID>UnusedPrivateMember:OnlineBackupError.kt$SavingDatabaseFailure$private fun readResolve(): Any</ID>
    <ID>UnusedPrivateMember:SubscriptionViewModel.kt$MissingBillingClient$private fun readResolve(): Any</ID>
    <ID>UnusedPrivateMember:SubscriptionViewModel.kt$MissingProductDetails$private fun readResolve(): Any</ID>
    <ID>UnusedPrivateMember:SubscriptionViewModel.kt$PlanNotSelected$private fun readResolve(): Any</ID>
    <ID>UnusedPrivateProperty:AdHelper.kt$AdHelper$eachAd</ID>
    <ID>UnusedPrivateProperty:Theme.kt$private val highContrastDarkColorScheme = darkColorScheme( primary = primaryDarkHighContrast, onPrimary = onPrimaryDarkHighContrast, primaryContainer = primaryContainerDarkHighContrast, onPrimaryContainer = onPrimaryContainerDarkHighContrast, secondary = secondaryDarkHighContrast, onSecondary = onSecondaryDarkHighContrast, secondaryContainer = secondaryContainerDarkHighContrast, onSecondaryContainer = onSecondaryContainerDarkHighContrast, tertiary = tertiaryDarkHighContrast, onTertiary = onTertiaryDarkHighContrast, tertiaryContainer = tertiaryContainerDarkHighContrast, onTertiaryContainer = onTertiaryContainerDarkHighContrast, error = errorDarkHighContrast, onError = onErrorDarkHighContrast, errorContainer = errorContainerDarkHighContrast, onErrorContainer = onErrorContainerDarkHighContrast, background = backgroundDarkHighContrast, onBackground = onBackgroundDarkHighContrast, surface = surfaceDarkHighContrast, onSurface = onSurfaceDarkHighContrast, surfaceVariant = surfaceVariantDarkHighContrast, onSurfaceVariant = onSurfaceVariantDarkHighContrast, outline = outlineDarkHighContrast, outlineVariant = outlineVariantDarkHighContrast, scrim = scrimDarkHighContrast, inverseSurface = inverseSurfaceDarkHighContrast, inverseOnSurface = inverseOnSurfaceDarkHighContrast, inversePrimary = inversePrimaryDarkHighContrast, surfaceDim = surfaceDimDarkHighContrast, surfaceBright = surfaceBrightDarkHighContrast, surfaceContainerLowest = surfaceContainerLowestDarkHighContrast, surfaceContainerLow = surfaceContainerLowDarkHighContrast, surfaceContainer = surfaceContainerDarkHighContrast, surfaceContainerHigh = surfaceContainerHighDarkHighContrast, surfaceContainerHighest = surfaceContainerHighestDarkHighContrast, )</ID>
    <ID>UnusedPrivateProperty:Theme.kt$private val highContrastLightColorScheme = lightColorScheme( primary = primaryLightHighContrast, onPrimary = onPrimaryLightHighContrast, primaryContainer = primaryContainerLightHighContrast, onPrimaryContainer = onPrimaryContainerLightHighContrast, secondary = secondaryLightHighContrast, onSecondary = onSecondaryLightHighContrast, secondaryContainer = secondaryContainerLightHighContrast, onSecondaryContainer = onSecondaryContainerLightHighContrast, tertiary = tertiaryLightHighContrast, onTertiary = onTertiaryLightHighContrast, tertiaryContainer = tertiaryContainerLightHighContrast, onTertiaryContainer = onTertiaryContainerLightHighContrast, error = errorLightHighContrast, onError = onErrorLightHighContrast, errorContainer = errorContainerLightHighContrast, onErrorContainer = onErrorContainerLightHighContrast, background = backgroundLightHighContrast, onBackground = onBackgroundLightHighContrast, surface = surfaceLightHighContrast, onSurface = onSurfaceLightHighContrast, surfaceVariant = surfaceVariantLightHighContrast, onSurfaceVariant = onSurfaceVariantLightHighContrast, outline = outlineLightHighContrast, outlineVariant = outlineVariantLightHighContrast, scrim = scrimLightHighContrast, inverseSurface = inverseSurfaceLightHighContrast, inverseOnSurface = inverseOnSurfaceLightHighContrast, inversePrimary = inversePrimaryLightHighContrast, surfaceDim = surfaceDimLightHighContrast, surfaceBright = surfaceBrightLightHighContrast, surfaceContainerLowest = surfaceContainerLowestLightHighContrast, surfaceContainerLow = surfaceContainerLowLightHighContrast, surfaceContainer = surfaceContainerLightHighContrast, surfaceContainerHigh = surfaceContainerHighLightHighContrast, surfaceContainerHighest = surfaceContainerHighestLightHighContrast, )</ID>
    <ID>UnusedPrivateProperty:Theme.kt$private val mediumContrastDarkColorScheme = darkColorScheme( primary = primaryDarkMediumContrast, onPrimary = onPrimaryDarkMediumContrast, primaryContainer = primaryContainerDarkMediumContrast, onPrimaryContainer = onPrimaryContainerDarkMediumContrast, secondary = secondaryDarkMediumContrast, onSecondary = onSecondaryDarkMediumContrast, secondaryContainer = secondaryContainerDarkMediumContrast, onSecondaryContainer = onSecondaryContainerDarkMediumContrast, tertiary = tertiaryDarkMediumContrast, onTertiary = onTertiaryDarkMediumContrast, tertiaryContainer = tertiaryContainerDarkMediumContrast, onTertiaryContainer = onTertiaryContainerDarkMediumContrast, error = errorDarkMediumContrast, onError = onErrorDarkMediumContrast, errorContainer = errorContainerDarkMediumContrast, onErrorContainer = onErrorContainerDarkMediumContrast, background = backgroundDarkMediumContrast, onBackground = onBackgroundDarkMediumContrast, surface = surfaceDarkMediumContrast, onSurface = onSurfaceDarkMediumContrast, surfaceVariant = surfaceVariantDarkMediumContrast, onSurfaceVariant = onSurfaceVariantDarkMediumContrast, outline = outlineDarkMediumContrast, outlineVariant = outlineVariantDarkMediumContrast, scrim = scrimDarkMediumContrast, inverseSurface = inverseSurfaceDarkMediumContrast, inverseOnSurface = inverseOnSurfaceDarkMediumContrast, inversePrimary = inversePrimaryDarkMediumContrast, surfaceDim = surfaceDimDarkMediumContrast, surfaceBright = surfaceBrightDarkMediumContrast, surfaceContainerLowest = surfaceContainerLowestDarkMediumContrast, surfaceContainerLow = surfaceContainerLowDarkMediumContrast, surfaceContainer = surfaceContainerDarkMediumContrast, surfaceContainerHigh = surfaceContainerHighDarkMediumContrast, surfaceContainerHighest = surfaceContainerHighestDarkMediumContrast, )</ID>
    <ID>UnusedPrivateProperty:Theme.kt$private val mediumContrastLightColorScheme = lightColorScheme( primary = primaryLightMediumContrast, onPrimary = onPrimaryLightMediumContrast, primaryContainer = primaryContainerLightMediumContrast, onPrimaryContainer = onPrimaryContainerLightMediumContrast, secondary = secondaryLightMediumContrast, onSecondary = onSecondaryLightMediumContrast, secondaryContainer = secondaryContainerLightMediumContrast, onSecondaryContainer = onSecondaryContainerLightMediumContrast, tertiary = tertiaryLightMediumContrast, onTertiary = onTertiaryLightMediumContrast, tertiaryContainer = tertiaryContainerLightMediumContrast, onTertiaryContainer = onTertiaryContainerLightMediumContrast, error = errorLightMediumContrast, onError = onErrorLightMediumContrast, errorContainer = errorContainerLightMediumContrast, onErrorContainer = onErrorContainerLightMediumContrast, background = backgroundLightMediumContrast, onBackground = onBackgroundLightMediumContrast, surface = surfaceLightMediumContrast, onSurface = onSurfaceLightMediumContrast, surfaceVariant = surfaceVariantLightMediumContrast, onSurfaceVariant = onSurfaceVariantLightMediumContrast, outline = outlineLightMediumContrast, outlineVariant = outlineVariantLightMediumContrast, scrim = scrimLightMediumContrast, inverseSurface = inverseSurfaceLightMediumContrast, inverseOnSurface = inverseOnSurfaceLightMediumContrast, inversePrimary = inversePrimaryLightMediumContrast, surfaceDim = surfaceDimLightMediumContrast, surfaceBright = surfaceBrightLightMediumContrast, surfaceContainerLowest = surfaceContainerLowestLightMediumContrast, surfaceContainerLow = surfaceContainerLowLightMediumContrast, surfaceContainer = surfaceContainerLightMediumContrast, surfaceContainerHigh = surfaceContainerHighLightMediumContrast, surfaceContainerHighest = surfaceContainerHighestLightMediumContrast, )</ID>
    <ID>UseCheckOrError:ProductDetails.kt$throw IllegalStateException("Monthly plan not found")</ID>
    <ID>UseCheckOrError:ProductDetails.kt$throw IllegalStateException("Yearly plan not found")</ID>
  </CurrentIssues>
</SmellBaseline>
